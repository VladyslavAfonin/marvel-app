[{"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/index.js":"1","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/services/MarvelService.js":"2","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/app/App.js":"3","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/appHeader/AppHeader.js":"4","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/charList/CharList.js":"5","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/charInfo/CharInfo.js":"6","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/randomChar/RandomChar.js":"7","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/spinner/Spinner.js":"8","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/errorMessage/ErrorMessage.js":"9","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/skeleton/Skeleton.js":"10","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/errorBoundary/ErrorBoundary.js":"11"},{"size":243,"mtime":1646058573679,"results":"12","hashOfConfig":"13"},{"size":1308,"mtime":1646238240987,"results":"14","hashOfConfig":"13"},{"size":1307,"mtime":1646245304636,"results":"15","hashOfConfig":"13"},{"size":559,"mtime":1629625707000,"results":"16","hashOfConfig":"13"},{"size":3891,"mtime":1646313560064,"results":"17","hashOfConfig":"13"},{"size":3501,"mtime":1646245479364,"results":"18","hashOfConfig":"13"},{"size":3241,"mtime":1646163513647,"results":"19","hashOfConfig":"13"},{"size":4551,"mtime":1646136835925,"results":"20","hashOfConfig":"13"},{"size":253,"mtime":1646138747113,"results":"21","hashOfConfig":"13"},{"size":666,"mtime":1629627051000,"results":"22","hashOfConfig":"13"},{"size":449,"mtime":1646234192565,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1upn5bx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/index.js",[],["49","50"],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/services/MarvelService.js",[],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/app/App.js",[],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/appHeader/AppHeader.js",["51","52","53"],"import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/charList/CharList.js",[],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/charInfo/CharInfo.js",["54"],"import { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount(){\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService.getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char: char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render(){\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || error || loading ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(error || loading || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {\"object-fit\": \"cover\"};\n    if(thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = {\"object-fit\": \"unset\"};\n    }\n\n    return (\n        <Fragment>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length === 0 ? \"There is any comics yet\" : comics.map((item, i) => {\n                        if(i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </Fragment>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/randomChar/RandomChar.js",[],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/spinner/Spinner.js",[],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/errorMessage/ErrorMessage.js",[],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/skeleton/Skeleton.js",[],"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/errorBoundary/ErrorBoundary.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":17,"nodeType":"61","endLine":7,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":13,"column":25,"nodeType":"61","endLine":13,"endColumn":37},{"ruleId":"59","severity":1,"message":"60","line":15,"column":25,"nodeType":"61","endLine":15,"endColumn":37},{"ruleId":"62","severity":1,"message":"63","line":110,"column":35,"nodeType":"64","messageId":"65","endLine":110,"endColumn":42},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation"]