{"ast":null,"code":"class MarvelService {\n  constructor() {\n    this._apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n    this._apiKey = \"apikey=49c1311a2f3a774cfb9d22ac5af429bf\";\n\n    this.getResource = async url => {\n      let res = await fetch(url);\n\n      if (!res.ok) {\n        throw new Error(`Couln't fetch ${url}, status: ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCharacters = async () => {\n      const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\n      return res.data.results.map(this._transformCharacter);\n    };\n\n    this.getCharacter = async id => {\n      const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n      return this._transformCharacter(res.data.results[0]);\n    };\n\n    this._transformCharacter = char => {\n      console.log(char.comics.items.length);\n      return {\n        id: char.id,\n        name: char.name,\n        description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n        thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n        homepage: char.urls[0].url,\n        wiki: char.urls[1].url,\n        comics: char.comics.items.length === 0 ? 'There is no comics yet' : char.comics.items\n      };\n    };\n  }\n\n}\n\nexport default MarvelService;","map":{"version":3,"sources":["/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/services/MarvelService.js"],"names":["MarvelService","_apiBase","_apiKey","getResource","url","res","fetch","ok","Error","status","json","getAllCharacters","data","results","map","_transformCharacter","getCharacter","id","char","console","log","comics","items","length","name","description","slice","thumbnail","path","extension","homepage","urls","wiki"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAChBC,QADgB,GACL,2CADK;AAAA,SAEhBC,OAFgB,GAEN,yCAFM;;AAAA,SAIhBC,WAJgB,GAIF,MAAOC,GAAP,IAAe;AACzB,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AACA,UAAG,CAACC,GAAG,CAACE,EAAR,EAAY;AACR,cAAM,IAAIC,KAAJ,CAAW,iBAAgBJ,GAAI,aAAYC,GAAG,CAACI,MAAO,EAAtD,CAAN;AACH;;AACD,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH,KAVe;;AAAA,SAYhBC,gBAZgB,GAYG,YAAY;AAC3B,YAAMN,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKF,QAAS,iCAAgC,KAAKC,OAAQ,EAA/E,CAAlB;AACA,aAAOG,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqB,KAAKC,mBAA1B,CAAP;AACH,KAfe;;AAAA,SAiBhBC,YAjBgB,GAiBD,MAAOC,EAAP,IAAc;AACzB,YAAMZ,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKF,QAAS,cAAagB,EAAG,IAAG,KAAKf,OAAQ,EAAlE,CAAlB;AACA,aAAO,KAAKa,mBAAL,CAAyBV,GAAG,CAACO,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAzB,CAAP;AACH,KApBe;;AAAA,SAsBhBE,mBAtBgB,GAsBOG,IAAD,IAAU;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CAAYC,KAAZ,CAAkBC,MAA9B;AACA,aAAO;AACHN,QAAAA,EAAE,EAAEC,IAAI,CAACD,EADN;AAEHO,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFR;AAGHC,QAAAA,WAAW,EAAEP,IAAI,CAACO,WAAL,GAAoB,GAAEP,IAAI,CAACO,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KAArD,GAA4D,4CAHtE;AAIHC,QAAAA,SAAS,EAAET,IAAI,CAACS,SAAL,CAAeC,IAAf,GAAsB,GAAtB,GAA4BV,IAAI,CAACS,SAAL,CAAeE,SAJnD;AAKHC,QAAAA,QAAQ,EAAEZ,IAAI,CAACa,IAAL,CAAU,CAAV,EAAa3B,GALpB;AAMH4B,QAAAA,IAAI,EAAEd,IAAI,CAACa,IAAL,CAAU,CAAV,EAAa3B,GANhB;AAOHiB,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,KAA6B,CAA7B,GAAiC,wBAAjC,GAA4DL,IAAI,CAACG,MAAL,CAAYC;AAP7E,OAAP;AASH,KAjCe;AAAA;;AAAA;;AAoCpB,eAAetB,aAAf","sourcesContent":["class MarvelService {\n    _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n    _apiKey = \"apikey=49c1311a2f3a774cfb9d22ac5af429bf\";\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n        if(!res.ok) {\n            throw new Error(`Couln't fetch ${url}, status: ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    getAllCharacters = async () => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        console.log(char.comics.items.length);\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items.length === 0 ? 'There is no comics yet' : char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;"]},"metadata":{},"sourceType":"module"}