{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoaded = charList => {\n      this.setState({\n        charList: charList,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.renderItems = data => {\n      const characters = data.map(item => {\n        let imgStyle = {\n          \"object-fit\": \"cover\"\n        };\n\n        if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n          imgStyle = {\n            \"object-fit\": \"unset\"\n          };\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__item\",\n          onClick: () => this.props.onCharSelected(item.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.thumbnail,\n            alt: item.name,\n            style: imgStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char__name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"char__grid\",\n        children: characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.onRequest;\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const characters = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? characters : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"char__grid\",\n        children: [errorMessage, spinner, content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/Users/vladyslavafonin/Documents/Projects/Front-end/React/Marvel/src/components/charList/CharList.js"],"names":["Component","MarvelService","Spinner","ErrorMessage","CharList","state","charList","loading","error","marvelService","onRequest","offset","getAllCharacters","then","onCharListLoaded","catch","onError","setState","renderItems","data","characters","map","item","imgStyle","thumbnail","props","onCharSelected","id","name","componentDidMount","render","errorMessage","spinner","content"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true, \n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest\n    }\n\n    onRequest = (offset) => {\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoaded = (charList) => {\n        this.setState({\n            charList: charList,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    renderItems = (data) => {\n        const characters = data.map(item => {\n            let imgStyle = {\"object-fit\": \"cover\"};\n            if(item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n                imgStyle = {\"object-fit\": \"unset\"};\n            }\n\n            return (\n                <li className=\"char__item\" key={item.id} onClick={() => this.props.onCharSelected(item.id)}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {characters}\n            </ul>\n        )\n    }\n\n    render(){\n        const {charList, loading, error} = this.state;\n        const characters = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? characters : null;\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\">\n                    {errorMessage}\n                    {spinner}\n                    {content}\n                </ul>\n                <button className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}